{"ast":null,"code":"import _toConsumableArray from \"/home/aman/Desktop/DealsBazzar-main/UI/NewCode/react-login-form/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as actiontype from '../Action/Action';\nexport default function UserOrderReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actiontype.LOAD_USER_ORDERS:\n      return action.payload.userorderlist;\n\n    case actiontype.ADD_ORDER:\n      return [].concat(_toConsumableArray(state), [action.payload.order]);\n\n    case actiontype.CANCEL_ORDER:\n      return state.map(function (order) {\n        if (order.orderId == action.payload.orderId) {\n          order.orderStatus = \"cancelled\";\n        }\n\n        return order;\n      });\n\n    case actiontype.LOGOUT:\n      return action.payload.reset;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/aman/Desktop/DealsBazzar-main/UI/NewCode/react-login-form/src/Redux/Reducer/UserOrderReducer.js"],"names":["actiontype","UserOrderReducer","state","action","type","LOAD_USER_ORDERS","payload","userorderlist","ADD_ORDER","order","CANCEL_ORDER","map","orderId","orderStatus","LOGOUT","reset"],"mappings":";AAAA,OAAO,KAAKA,UAAZ,MAA4B,kBAA5B;AAGA,eAAe,SAASC,gBAAT,GAA8C;AAAA,MAApBC,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AACzD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKJ,UAAU,CAACK,gBAAhB;AAAkC,aAAOF,MAAM,CAACG,OAAP,CAAeC,aAAtB;;AAClC,SAAKP,UAAU,CAACQ,SAAhB;AAA2B,0CAAWN,KAAX,IAAiBC,MAAM,CAACG,OAAP,CAAeG,KAAhC;;AAC3B,SAAKT,UAAU,CAACU,YAAhB;AAA8B,aAAOR,KAAK,CAACS,GAAN,CAAU,UAACF,KAAD,EAAS;AACxD,YAAGA,KAAK,CAACG,OAAN,IAAeT,MAAM,CAACG,OAAP,CAAeM,OAAjC,EAAyC;AACrCH,UAAAA,KAAK,CAACI,WAAN,GAAkB,WAAlB;AACH;;AACD,eAAOJ,KAAP;AACH,OALwC,CAAP;;AAM9B,SAAKT,UAAU,CAACc,MAAhB;AAAwB,aAAOX,MAAM,CAACG,OAAP,CAAeS,KAAtB;;AACxB;AAAQ,aAAOb,KAAP;AAVZ;AAYH","sourcesContent":["import * as actiontype from '../Action/Action'\n\n\nexport default function UserOrderReducer(state = [], action) {\n    switch (action.type) {\n        case actiontype.LOAD_USER_ORDERS: return action.payload.userorderlist\n        case actiontype.ADD_ORDER: return [...state,action.payload.order]\n        case actiontype.CANCEL_ORDER: return state.map((order)=>{\n        if(order.orderId==action.payload.orderId){\n            order.orderStatus=\"cancelled\"            \n        }\n        return order\n    })\n        case actiontype.LOGOUT: return action.payload.reset\n        default:return state\n    }\n}"]},"metadata":{},"sourceType":"module"}