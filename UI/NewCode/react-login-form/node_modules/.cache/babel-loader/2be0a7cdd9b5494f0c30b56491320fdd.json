{"ast":null,"code":"import _toConsumableArray from \"/home/akash/srikar/DealsBazzar-1-main/UI/NewCode/react-login-form/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as actiontype from '../Action/Action';\nexport default function BidUserReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actiontype.LOAD_LOGGED_USER_BIDS:\n      return action.payload.bidlist;\n\n    case actiontype.ADD_LOGEED_USER_BIDS:\n      return [].concat(_toConsumableArray(state), [action.payload.bid]);\n\n    case actiontype.DELETE_USER_BID:\n      return state.map(function (mapBid) {\n        //4 times\n        if (mapBid.bidId != action.payload.bidId) {\n          return mapBid;\n        }\n      });\n\n    case actiontype.LOGOUT:\n      return action.payload.reset;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/akash/srikar/DealsBazzar-1-main/UI/NewCode/react-login-form/src/Redux/Reducer/BidUserReducer.js"],"names":["actiontype","BidUserReducer","state","action","type","LOAD_LOGGED_USER_BIDS","payload","bidlist","ADD_LOGEED_USER_BIDS","bid","DELETE_USER_BID","map","mapBid","bidId","LOGOUT","reset"],"mappings":";AAAA,OAAO,KAAKA,UAAZ,MAA4B,kBAA5B;AAEA,eAAe,SAASC,cAAT,GAAwC;AAAA,MAAhBC,KAAgB,uEAAV,EAAU;AAAA,MAAPC,MAAO;;AACnD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKJ,UAAU,CAACK,qBAAhB;AAAsC,aAAOF,MAAM,CAACG,OAAP,CAAeC,OAAtB;;AACtC,SAAKP,UAAU,CAACQ,oBAAhB;AAAqC,0CAAWN,KAAX,IAAiBC,MAAM,CAACG,OAAP,CAAeG,GAAhC;;AACrC,SAAKT,UAAU,CAACU,eAAhB;AAAiC,aAAOR,KAAK,CAACS,GAAN,CAAU,UAACC,MAAD,EAAY;AAC1D;AACA,YAAIA,MAAM,CAACC,KAAP,IAAgBV,MAAM,CAACG,OAAP,CAAeO,KAAnC,EAA0C;AACtC,iBAAOD,MAAP;AACH;AACJ,OALuC,CAAP;;AAMjC,SAAKZ,UAAU,CAACc,MAAhB;AAAwB,aAAOX,MAAM,CAACG,OAAP,CAAeS,KAAtB;;AACxB;AAAQ,aAAOb,KAAP;AAVZ;AAYH","sourcesContent":["import * as actiontype from '../Action/Action'\n\nexport default function BidUserReducer(state=[],action){\n    switch(action.type){\n        case actiontype.LOAD_LOGGED_USER_BIDS:return action.payload.bidlist\n        case actiontype.ADD_LOGEED_USER_BIDS:return [...state,action.payload.bid]\n        case actiontype.DELETE_USER_BID: return state.map((mapBid) => {\n            //4 times\n            if (mapBid.bidId != action.payload.bidId) {\n                return mapBid\n            }\n        })\n        case actiontype.LOGOUT: return action.payload.reset\n        default:return state\n    }\n}"]},"metadata":{},"sourceType":"module"}