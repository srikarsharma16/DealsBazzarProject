{"ast":null,"code":"import * as actiontype from '../Action/Action';\nexport default function BidOtherUsersReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actiontype.LOAD_USER_PRODUCTS_BIDS:\n      return action.payload.bidlist;\n\n    case actiontype.UPDATE_PRODUCT_BIDS:\n      return state.map(function (bid) {\n        //4 times\n        var arr = {};\n        action.payload.bidlist.map(function (p) {\n          if (p.bidId == bid.bid) {\n            bid.bidStatus = p.bidStatus;\n            arr = bid;\n          } else {\n            arr = bid;\n          }\n        });\n        return arr;\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/akash/srikar/DealsBazzar-1-main/UI/NewCode/react-login-form/src/Redux/Reducer/BidOtherUsersReducer.js"],"names":["actiontype","BidOtherUsersReducer","state","action","type","LOAD_USER_PRODUCTS_BIDS","payload","bidlist","UPDATE_PRODUCT_BIDS","map","bid","arr","p","bidId","bidStatus"],"mappings":"AAAA,OAAO,KAAKA,UAAZ,MAA4B,kBAA5B;AAGA,eAAe,SAASC,oBAAT,GAAkD;AAAA,MAApBC,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AAC7D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKJ,UAAU,CAACK,uBAAhB;AAAyC,aAAOF,MAAM,CAACG,OAAP,CAAeC,OAAtB;;AACzC,SAAKP,UAAU,CAACQ,mBAAhB;AAAqC,aAAON,KAAK,CAACO,GAAN,CAAU,UAACC,GAAD,EAAS;AAC3D;AAEA,YAAIC,GAAG,GAAC,EAAR;AACAR,QAAAA,MAAM,CAACG,OAAP,CAAeC,OAAf,CAAuBE,GAAvB,CAA2B,UAACG,CAAD,EAAK;AAC5B,cAAGA,CAAC,CAACC,KAAF,IAASH,GAAG,CAACA,GAAhB,EAAoB;AAChBA,YAAAA,GAAG,CAACI,SAAJ,GAAcF,CAAC,CAACE,SAAhB;AACAH,YAAAA,GAAG,GAACD,GAAJ;AACH,WAHD,MAGK;AACDC,YAAAA,GAAG,GAACD,GAAJ;AACH;AACJ,SAPD;AAQA,eAAOC,GAAP;AAEH,OAd2C,CAAP;;AAerC;AAAS,aAAOT,KAAP;AAjBb;AAmBH","sourcesContent":["import * as actiontype from '../Action/Action'\n\n\nexport default function BidOtherUsersReducer(state = [], action) {\n    switch (action.type) {\n        case actiontype.LOAD_USER_PRODUCTS_BIDS: return action.payload.bidlist\n        case actiontype.UPDATE_PRODUCT_BIDS: return state.map((bid) => {\n            //4 times\n             \n            var arr={}\n            action.payload.bidlist.map((p)=>{\n                if(p.bidId==bid.bid){\n                    bid.bidStatus=p.bidStatus\n                    arr=bid\n                }else{\n                    arr=bid\n                }\n            })\n            return arr\n            \n        })\n        default: return state\n    }\n}"]},"metadata":{},"sourceType":"module"}