{"ast":null,"code":"import * as actiontype from '../Action/Action';\nexport default function BidOtherUsersReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actiontype.LOAD_USER_PRODUCTS_BIDS:\n      return action.payload.bidlist;\n\n    case actiontype.UPDATE_PRODUCT_BIDS:\n      return state.map(function (bid) {\n        //another map start\n        action.payload.bidlist.map(function (updatedbid) {\n          if (bid.productId == updatedbid.productId) {\n            bid.bidStatus = updatedbid.bidStatus;\n            return bid;\n          }\n        });\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/akash/srikar/DealsBazzar-1-main/UI/NewCode/react-login-form/src/Redux/Reducer/BidOtherUsersReducer.js"],"names":["actiontype","BidOtherUsersReducer","state","action","type","LOAD_USER_PRODUCTS_BIDS","payload","bidlist","UPDATE_PRODUCT_BIDS","map","bid","updatedbid","productId","bidStatus"],"mappings":"AAAA,OAAO,KAAKA,UAAZ,MAA4B,kBAA5B;AAEA,eAAe,SAASC,oBAAT,GAAkD;AAAA,MAApBC,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AAC7D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKJ,UAAU,CAACK,uBAAhB;AAAyC,aAAOF,MAAM,CAACG,OAAP,CAAeC,OAAtB;;AACzC,SAAKP,UAAU,CAACQ,mBAAhB;AAAqC,aAAON,KAAK,CAACO,GAAN,CAAU,UAACC,GAAD,EAAS;AAE3D;AACAP,QAAAA,MAAM,CAACG,OAAP,CAAeC,OAAf,CAAuBE,GAAvB,CAA2B,UAACE,UAAD,EAAgB;AAEvC,cAAID,GAAG,CAACE,SAAJ,IAAiBD,UAAU,CAACC,SAAhC,EAA2C;AACvCF,YAAAA,GAAG,CAACG,SAAJ,GAAgBF,UAAU,CAACE,SAA3B;AACA,mBAAOH,GAAP;AACH;AACJ,SAND;AAOH,OAV2C,CAAP;;AAWrC;AAAS,aAAOR,KAAP;AAbb;AAeH","sourcesContent":["import * as actiontype from '../Action/Action'\n\nexport default function BidOtherUsersReducer(state = [], action) {\n    switch (action.type) {\n        case actiontype.LOAD_USER_PRODUCTS_BIDS: return action.payload.bidlist\n        case actiontype.UPDATE_PRODUCT_BIDS: return state.map((bid) => {\n\n            //another map start\n            action.payload.bidlist.map((updatedbid) => {\n\n                if (bid.productId == updatedbid.productId) {\n                    bid.bidStatus = updatedbid.bidStatus\n                    return bid\n                }\n            })\n        })\n        default: return state\n    }\n}"]},"metadata":{},"sourceType":"module"}