{"ast":null,"code":"import * as actiontype from '../Action/Action';\nexport default function BidOtherUsersReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var bids = action.payload.bidlist;\n\n  switch (action.type) {\n    case actiontype.LOAD_USER_PRODUCTS_BIDS:\n      return action.payload.bidlist;\n\n    case actiontype.UPDATE_PRODUCT_BIDS:\n      return state.map(function (bid) {\n        //another map start\n        bids.map(function (updatedbid) {\n          if (bid.productId == updatedbid.productId) {\n            bid.bidStatus = updatedbid.bidStatus;\n          }\n        }); //another map end\n\n        return bid;\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/akash/srikar/DealsBazzar-1-main/UI/NewCode/react-login-form/src/Redux/Reducer/BidOtherUsersReducer.js"],"names":["actiontype","BidOtherUsersReducer","state","action","bids","payload","bidlist","type","LOAD_USER_PRODUCTS_BIDS","UPDATE_PRODUCT_BIDS","map","bid","updatedbid","productId","bidStatus"],"mappings":"AAAA,OAAO,KAAKA,UAAZ,MAA4B,kBAA5B;AAEA,eAAe,SAASC,oBAAT,GAA8C;AAAA,MAAhBC,KAAgB,uEAAV,EAAU;AAAA,MAAPC,MAAO;AACzD,MAAIC,IAAI,GAACD,MAAM,CAACE,OAAP,CAAeC,OAAxB;;AACA,UAAOH,MAAM,CAACI,IAAd;AACI,SAAKP,UAAU,CAACQ,uBAAhB;AAAwC,aAAOL,MAAM,CAACE,OAAP,CAAeC,OAAtB;;AACxC,SAAKN,UAAU,CAACS,mBAAhB;AAAoC,aAAOP,KAAK,CAACQ,GAAN,CAAU,UAACC,GAAD,EAAO;AAExD;AACAP,QAAAA,IAAI,CAACM,GAAL,CAAS,UAACE,UAAD,EAAc;AAEnB,cAAGD,GAAG,CAACE,SAAJ,IAAeD,UAAU,CAACC,SAA7B,EAAuC;AAEnCF,YAAAA,GAAG,CAACG,SAAJ,GAAcF,UAAU,CAACE,SAAzB;AACH;AACJ,SAND,EAHwD,CAUxD;;AACA,eAAOH,GAAP;AACH,OAZ0C,CAAP;;AAapC;AAAQ,aAAOT,KAAP;AAfZ;AAiBH","sourcesContent":["import * as actiontype from '../Action/Action'\n\nexport default function BidOtherUsersReducer(state=[],action){\n    var bids=action.payload.bidlist\n    switch(action.type){\n        case actiontype.LOAD_USER_PRODUCTS_BIDS:return action.payload.bidlist\n        case actiontype.UPDATE_PRODUCT_BIDS:return state.map((bid)=>{\n        \n            //another map start\n            bids.map((updatedbid)=>{\n\n                if(bid.productId==updatedbid.productId){\n\n                    bid.bidStatus=updatedbid.bidStatus   \n                }\n            })\n            //another map end\n            return bid\n        })\n        default:return state\n    }\n}"]},"metadata":{},"sourceType":"module"}