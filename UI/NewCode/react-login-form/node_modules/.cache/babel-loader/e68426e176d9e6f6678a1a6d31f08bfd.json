{"ast":null,"code":"import _classCallCheck from \"/home/akash/srikar/DealsBazzar-1-main/UI/NewCode/react-login-form/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/akash/srikar/DealsBazzar-1-main/UI/NewCode/react-login-form/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/akash/srikar/DealsBazzar-1-main/UI/NewCode/react-login-form/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/akash/srikar/DealsBazzar-1-main/UI/NewCode/react-login-form/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/akash/srikar/DealsBazzar-1-main/UI/NewCode/react-login-form/src/BidOtherUsersComponent/OtherUsersBids.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Store from '../Redux/Store';\nimport * as bidaction from '../Redux/Action/BidOtherUsersAction';\nimport BidService from '../Service/BidService';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    token: state.user.token\n  };\n};\n\nvar OtherUsersBids = /*#__PURE__*/function (_React$Component) {\n  _inherits(OtherUsersBids, _React$Component);\n\n  var _super = _createSuper(OtherUsersBids);\n\n  function OtherUsersBids(props) {\n    var _this;\n\n    _classCallCheck(this, OtherUsersBids);\n\n    _this = _super.call(this, props);\n\n    _this.updateBidStatus = function (bid, status) {\n      var arr = [];\n      arr = _this.props.data.bidOtherUserslist.filter(function (bids) {\n        return bids.productId == _this.props.data.productId;\n      });\n      /* arr = this.state.filteredList.map((p) => {\n          if (p.bidId == bid.bidId) {\n              p.bidStatus = 2;\n              return p\n          }\n          else {\n              return p\n          }\n      }) */\n\n      console.log(\"sendbidlist : \", arr);\n      /* BidService.updateBid(arr)\n      .then(response=>response.json())\n      .then(data=>{\n        if(data.statusCode==200){\n          console.log(\"data recieved  : \",data.data)\n          Store.dispatch({\n            ...bidaction.ACTION_UPDATE_PRODUCT_BID, payload: {\n              bidlist: data.data\n            }\n          })\n        }else{\n          alert(\"bid status could ne updated, please try again after some time\")\n        }\n      }) */\n    };\n\n    return _this;\n  }\n\n  _createClass(OtherUsersBids, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"bidlist: \", this.props.data.bidOtherUserslist);\n      console.log(\"productId: \", this.props.data.productId);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      console.log(\"bidlist after update: \", this.props.data.bidOtherUserslist);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }\n      }, \"sl no\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }\n      }, \"Bidder Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }\n      }, \"Bidder Price\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }\n      }, \"Bidder Stock\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }\n      }, \"Bidder Status\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }, this.props.data.bidOtherUserslist.filter(function (bids) {\n        return bids.productId == _this2.props.data.productId;\n      }).map(function (bid, index) {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: index,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 32\n          }\n        }, /*#__PURE__*/React.createElement(\"th\", {\n          scope: \"row\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }\n        }, index + 1), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }\n        }, bid.userId), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }\n        }, bid.bidPrice), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }\n        }, bid.bidStock), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }\n        }, bid.bidStatus == 1 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-success\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 41\n          }\n        }, \"Accepted\")) : bid.bidStatus == 0 ? /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-info\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 41\n          }\n        }, \"Not Accepted\") : /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: function onClick() {\n            _this2.updateBidStatus(bid, 2);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 41\n          }\n        }, \"Accept\")));\n      }))));\n    }\n  }]);\n\n  return OtherUsersBids;\n}(React.Component);\n\nexport default connect(mapStateToProps)(OtherUsersBids);","map":{"version":3,"sources":["/home/akash/srikar/DealsBazzar-1-main/UI/NewCode/react-login-form/src/BidOtherUsersComponent/OtherUsersBids.js"],"names":["React","connect","Store","bidaction","BidService","mapStateToProps","state","token","user","OtherUsersBids","props","updateBidStatus","bid","status","arr","data","bidOtherUserslist","filter","bids","productId","console","log","map","index","userId","bidPrice","bidStock","bidStatus","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport Store from '../Redux/Store'\nimport * as bidaction from '../Redux/Action/BidOtherUsersAction'\nimport BidService from '../Service/BidService'\n\nvar mapStateToProps = state => {\n    return {\n        token: state.user.token\n    }\n}\n\nclass OtherUsersBids extends React.Component {\n    constructor(props) {\n        super(props)   \n    }\n\n    componentDidMount() {\n        console.log(\"bidlist: \", this.props.data.bidOtherUserslist)\n        console.log(\"productId: \", this.props.data.productId)\n    }\n    componentDidUpdate() {\n        console.log(\"bidlist after update: \", this.props.data.bidOtherUserslist)\n    }\n    updateBidStatus = (bid, status) => {\n        var arr = []\n        arr=this.props.data.bidOtherUserslist.filter(bids => bids.productId == this.props.data.productId)\n        /* arr = this.state.filteredList.map((p) => {\n            if (p.bidId == bid.bidId) {\n                p.bidStatus = 2;\n                return p\n            }\n            else {\n                return p\n            }\n        }) */\n\n        console.log(\"sendbidlist : \",arr)\n\n        /* BidService.updateBid(arr)\n        .then(response=>response.json())\n        .then(data=>{\n          if(data.statusCode==200){\n            console.log(\"data recieved  : \",data.data)\n            Store.dispatch({\n              ...bidaction.ACTION_UPDATE_PRODUCT_BID, payload: {\n                bidlist: data.data\n              }\n            })\n          }else{\n            alert(\"bid status could ne updated, please try again after some time\")\n          }\n        }) */\n\n    }\n\n    render() {\n        return <>\n        \n            <table className=\"table\" >\n                <thead>\n                    <tr>\n                        <th scope=\"col\">sl no</th>\n                        <th scope=\"col\">Bidder Name</th>\n                        <th scope=\"col\">Bidder Price</th>\n                        <th scope=\"col\">Bidder Stock</th>\n                        <th scope=\"col\">Bidder Status</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {this.props.data.bidOtherUserslist.filter(bids => bids.productId == this.props.data.productId).map((bid, index) => {\n                        return <tr key={index}>\n                            <th scope=\"row\">{index + 1}</th>\n                            <td>{bid.userId}</td>\n                            <td>{bid.bidPrice}</td>\n                            <td>{bid.bidStock}</td>\n                            <td>\n                                {bid.bidStatus == 1 ?\n                                    <>\n                                        <button className=\"btn btn-success\">Accepted</button>\n                                    </>\n                                    :\n                                    (bid.bidStatus == 0 ?\n                                        <button className=\"btn btn-info\">Not Accepted</button>\n                                        :\n                                        <button className=\"btn btn-secondary\" onClick={() => { this.updateBidStatus(bid, 2) }} >Accept</button>)\n                                }\n                            </td>\n                        </tr>\n\n\n                    })}\n                </tbody>\n            </table>\n\n        </>\n\n    }\n\n}\n\nexport default connect(mapStateToProps)(OtherUsersBids);"]},"metadata":{},"sourceType":"module"}